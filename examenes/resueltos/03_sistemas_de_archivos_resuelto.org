#+TITLE: Examen parcial 3: Sistemas de archivos
#+AUTHOR: Sistemas Operativos (Grupo 1 – Gunnar Wolf)
#+DATE: 2013-05-17
#+OPTIONS: num:t toc:nil
#+LATEX_HEADER: \usepackage{setspace}
#+LATEX_HEADER: \usepackage[margin=2cm]{geometry}
#+LATEX_HEADER: \usepackage[spanish]{babel}
#+LANGUAGE: es

1. Describe dos mecanismos por medio de los cuales el sistema de
   archivos puede identificar de qué tipo es determinado archivo.

  *Respuesta:* La identificación puede hacerse:

   - Por /extensión del archivo/, como lo hacen los sistemas derivados
     de CP/M (incluyendo MS-DOS, VMS y Windows), empleando una parte
     específica del nombre del archivo (en este caso, los últimos tres
     caracteres, o lo que siga al último punto)

   - Por /números mágicos/: El sistema operativo lee los primeros
     sectores del archivo, y basado en las "huellas digitales" de
     cada tipo de archivo, determina cuál es el tipo. Este es el
     esquema más empleado en sistemas tipo Unix.

   - Por /metadatos externos/: Asociado a cada archivo hay un grupo de
     información (a veces llamado /división de recursos/) que guarda
     información /acerca de/ este archivo. Esta información puede
     contener el nombre del programa que lo creó. Este esquema es el
     más empleado por el sistema MacOS, particularmente en sus
     primeras versiones (hasta MacOS 9; MacOS 10 es un sistema
     mayormente Unix)

2. Hay diferentes modos en que un programa puede accesar a la
   información contenida en un archivo; los principales modos que
   vimos en clase son /secuencial/, /aleatorio/ y /relativo a
   índice/. Indica qué casos de uso resuelve mejor cada uno de estos
   modos de acceso.

   *Respuesta:*

   Un archivo /secuencial/ es empleado casi siempre que busquemos
   guardar un cúmulo de información que tiene sentido directamente
   para el usuario (como un archivo de texto o el código fuente de un
   programa), o que va a ser procesado de forma secuencial (como un
   un archivo de audio o video. Incluso si quisiéramos ocasionalmente
   /brincar/ a un punto dado del archivo (que podemos hacerlo), el
   uso primario será secuencial.

   El ejemplo más clásico de un archivo /de acceso aleatorio/ es una
   base de datos relacional: Un archivo que contiene una gran cantidad
   de /registros/, todos ellos de la misma longitud, y dentro del cual
   podemos /brincar/ a la posición que deseemos
   directamente. Nuevamente, un archivo de este tipo podría abrirse en
   modo secuencial (por ejemplo, para respaldarlo al copiarlo a otro
   medio), pero su uso primario es de acceso aleatorio.

   Por último, el ejemplo más frecuente para los archivos de acceso
   /relativo a índice/ son las bases de datos tipo NoSQL, bases de
   datos con estructura variable, con índices que permiten /brincar/
   rápidamente entre un archivo sin estructura formal.

3. De las siguientes afirmaciones, indica cuáles se refieren a /ligas
   duras/ (D), cuáles a /ligas simbólicas/ (S), y cuáles a /enlaces
   directos/ (E). Hay una sóla respuesta correcta para cada
   afirmación.
   1. Son dos (o más) entradas en el directorio apuntando al mismo
      i-nodo: *D*: /Liga dura/
   2. Es un archivo normal e independiente en el sistema de archivos,
      que podría ser abierto directamente por los programas: *E*:
      /Enlace directo/
   3. Pueden apuntar a directorios, incluso creando ciclos: *S*: /Liga
      simbólica/
   4. Su tipo de archivo en el directorio está indicado por la
      extensión =.LNK=: *E*: /Enlace directo/
   5. El sistema operativo /resuelve directamente/ todas las
      operaciones /como si fueran/ al archivo referido: *S*: /Liga
      simbólica/
   6. No pueden referirse a archivos en sistemas de archivos distintos
      del propio: *D*: /Liga dura/
   7. Pueden existir en un sistema de archivos tipo FAT: *E*: /Enlace
      directo/
   8. Si un usuario elimina cualquiera de las referencias a un archivo
      empleando este esquema, el archivo sigue existiendo en las
      demás: *D*: /Liga dura/

4. Describe el funcionamiento de un /sistema de archivos con bitácora/
   (/journaling file system/). ¿Cómo nos asegura que el sistema se
   mantendrá consistente después de una interrupción abrupta?

   *Respuesta:*

   Todas las operaciones de metadatos (en algunas implementaciones,
   aunque pocas, también las de datos) son escritas a un área especial
   del disco, típicamente estructurada como una /lista circular/, que
   recibe el nombre de bitácora. Periódicamente, o en etapas de baja
   utilización, el sistema operativo va avanzando sobre la bitácora,
   /comprometiendo/ estas operaciones (esto es, grabándolas en la
   estructura principal del sistema de archivos) y marcándolas como ya
   realizadas en la bitácora. Si se interrumpe abruptamente la
   operación del sistema de archivos (por ejemplo, tras un corte
   eléctrico o cuando el usuario remueve "suciamente" una unidad
   externa), el sistema operativo encuentra la última operación
   /comprometida/, y basta con que avance desde ahí para que el
   sistema de archivos esté nuevamente en un estado consistente.

5. Presentamos algunos algoritmos para gestionar las solicitudes de
   acceso a disco — /Primero llegado, primero servido/ (FIFO), /Tiempo
   más corto a continuación/ (SSTF), /Elevador/ (SCAN), y algunas de
   sus variaciones. Mencionamos también que, a pesar de la importancia
   de conocerlos por su importancia histórica, hoy en día han dejado
   de ser tan importantes como lo fueron hacia los 1980. Menciona dos
   factores que han llevado a que pierdan relevancia.

   *Respuesta:*

   Principalmente es a causa de los controladores de disco
   inteligentes y la abstracción que imponen al sistema operativo:

   - Por un lado, el direccionamiento a disco LBA hace que el sistema
     operativo no conozca ya directamente la geometría del disco, por
     lo cual no puede hacer la planeación del movimiento de cabezas
     con la certeza de que refleja la realidad.
   - Por otro lado, los controladores implementan internamente memoria
     caché, y son capaces de organizar las solicitudes conforme éstos
     consideran adecuado
   - Además, el mapeo y reubicación de sectores dañados hace que lo
     que el isstema operativo asume que es una lectura o escritura
     contigua (dado que tiene direcciones LBA adyacentes) pueda no
     serlo

   Además de los puntos anteriores, la aparición y masificación de
   medios de almacenamiento no rotativos, como (principalmente) los
   basados en memoria Flash (SSD, USB), y el hecho de que estos
   presentan al sistema operativo una visión idéntica a si se tratara
   de un disco /tradicional/.

-----

#+BEGIN_CENTER
*Información importante*
#+END_CENTER
Estamos ya en la recta final del semestre; van aquí las indicaciones
para los exámenes finales.
- ¡Espero que califiques para la exención! Recuerda: 80% de
  asistencias (máximo de 8 faltas), calificación global de 8.
- ¿Presentas examen final? Tienen derecho a presentar examen en 1ª
  vuelta todos los que tengan el 80% de asistencias
  - Para el examen 1ª vuelta (*29 de mayo, 13:00, A107*), la
    presentación del trabajo final cuenta (como en el curso completo)
    hasta un 20% de la calificación.
    - La máxima calificación alcanzable con el examen final y /sin/ el
      trabajo es de 9
    - Entregar un buen trabajo te da el /colchón/ de poder alcanzar el
      110%
  - Para el examen 2ª vuelta (*7 de junio, 13:00, A107*), el examen
    vale 100%, y no cuenta /nada más/ que el examen. /Todos los
    alumnos del curso/ pueden presentar 2ª vuelta, independientemente
    de sus asistencias.

-----

| Pregunta  | Correcta | Parcial | Incorrecta |
|-----------+----------+---------+------------|
| 1         |       16 |       1 |          0 |
| 2         |        4 |       8 |          5 |
| 3a        |        8 |       0 |          9 |
| 3b        |       12 |       0 |          5 |
| 3c        |       13 |       0 |          4 |
| 3d        |       10 |       0 |          7 |
| 3e        |        7 |       0 |         10 |
| 3f        |       12 |       0 |          5 |
| 3g        |        4 |       0 |         13 |
| 3h        |        3 |       0 |         14 |
| 4         |       15 |       1 |          1 |
| 5         |        5 |       7 |          5 |
|-----------+----------+---------+------------|
| Promedios |     9.08 |    1.42 |       6.50 |
#+TBLFM: @14$2..@14$4=(vmean(@2..@13)); f-2
