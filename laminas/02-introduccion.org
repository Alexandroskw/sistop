#+SETUPFILE: ../setup_laminas.org
#+TITLE: Introducción a los sistemas operativos
#+DATE:

* ¿Qué son y qué hacen?

** ¿Qué es un sistema operativo?
- El /sistema base/ de una computadora \pause
- El programa que /siempre corre/ \pause
- Gestor de los /recursos/ del sistema \pause
- Lo que define /qué es compatible/ y /qué no/ dentro de una
  determinada arquitectura \pause
- El programa /menos importante/ de todos \pause
  - No realiza /trabajo útil/, sino que permite que /otros/ lo hagan
- …

** …¿Qué /no/ es?
- Los programas básicos para administrar archivos
- La forma en que el usuario /lanza/ programas
- El ambiente con que interactúa el usuario
  - Entorno gráfico
  - Línea de comando
  - …

** ¿Qué brinda al /programador/?
- Abstracción
  - /Embellecimiento/ -Finkel
  - /Virtualización/ -Arpaci-Dusseau
- Gestión de recursos
- Aislamiento y protección
** Abstracción
#+begin_center
Proporciona /abstracciones consistentes/ y /simplificaciones/ a los
procesos del usuario
#+end_center
- Archivos y directorios
- /Flujos de caracteres/ (entrada/salida)
- Dispositivos, conexiones de red, contacto con el /mundo exterior/
- El concepto mismo de /proceso/

** Gestión de recursos
#+begin_center
Administra los /recursos existentes/ en la computadora, permitiendo la
ejecución a los diversos procesos
#+end_center
- Cómo comparten los diversos procesos los recursos existentes (y
  rivales)
- Políticas de asignación (y recuperación) justas

** Aislamiento y protección
#+begin_center
Protección de los datos, de los recursos, de los procesos
#+end_center
- Entre procesos
- Entre usuarios
- Ante procesos /mal comportados/
- Ante procesos maliciosos

** Ahora sí… ¿Qué es un sistema operativo?
- El principal programa que corre en una computadora de propósito
  general
- Provee una serie de abstracciones básicas a los programas
  - Pueden haber diferentes sistemas operativos, definiendo distintas
    /interfaces/, sobre el mismo hardware
  - Un mismo sistema operativo puede /adecuarse a/ distintas
    arquitecturas de hardware
- Ofrece una infraestructura de gestión, aislamiento y protección de
  recursos
- Permite la implementación de /entornos operativos/

* Historia y evolución

** Construyendo a través de la historia
#+begin_center
Para comprender lo que hoy gestionan los sistemas operativos,
comencemos viendo cómo es que llegaron a gestionarlo.
\vfill
Vamos con un repaso histórico de la historia de la computación,
enfocados a las /inovaciones/ de cada etapa
#+end_center

** En el principio…
- Arquitectura /von Neumann/ (programa almacenado)
- Programación directa y explícita para el hardware
- Tiempo de programación \rightarrow tiempo /no productivo/
  \rightarrow desperdicio de recursos

** Sistemas de proceso por lotes (/batch processing/)
- Los programadores codifican su código en un medio de almacenamiento
  (/tarjetas perforadas/)
- Entregan los tambaches (/batches/) a los operadores
- Los operadores cargan secuencialmente los trabajos, entregan los
  resultados conforme se presentan

** Sistemas monitor en el proceso por lotes
- Implementan protección evitando la corrupción de /otros trabajos/
  - Interactuar con el lector de tarjetas (corrompiendo el siguiente
    programa)
  - Temporizadores y alarmas para evitar ciclos infinitos
- Estas medidas de protección requieren /modificación del hardware/
  - Noción de /instrucciones privilegiadas/

** Sistemas en lotes con /spool/
- ¿Spool? Bobina, o /Simultaneous Peripherial Operations On-Line/
- Cintas magnéticas
  - Carga intermedia de tarjeta a cinta
  - Resultados a cinta para posterior impresión
- Liberando los trabajos más lentos
  - Empleo de equipos /periféricos/ especializados

** Sistemas multiprogramados
- Diferentes etapas en la vida de un proceso: /limitado por CPU/,
  /limitado por entrada-salida/
- Para maximizar el uso de recursos, ejecutar /simultáneamente/ varios
  procesos
  - Requiere cambios fuertes en el hardware
  - Protección de recursos — Espacio de memoria
  - Recursos /estrictamente secuenciales/ requieren /bloqueos/ para
    ofrecer /acceso exclusivo/
- El monitor es invocado con mucha mayor frecuencia por los
  temporizadores
  - /Cambios de contexto/
- Interacción con el equipo: Se mantiene como el modelo en lotes

** Sistemas de tiempo compartido
- 1960s: Sistemas /interactivos/ y /multiusuarios/
- Manejo de /terminales/ para la interacción (teletipos, CRTs)
- Abstracciones de almacenamiento: Archivos, directorios en discos
- Ventajas al programador:
  - Interacción directa con el equipo
  - Edición interactiva
  - Compilación parcial
  - Ejecución inmediata
  - Bibliotecas de sistema
- Complejidad técnica
  - Requisito de múltiples cambios de contexto por segundo

** Tipos de multitarea
- /Cooperativa/ o /no apropiativa/ :: (cooperative multitasking) Cada
     proceso tiene control del CPU hasta que efectúa una /llamada al
     sistema/ o indica al sistema que puede tomar el control (=yield=)

- /Preventiva/ o /apropiativa/ :: (preemptive multitasking) El reloj
     del sistema interrumpe la ejecución de cada proceso transfiriendo
     /forzosamente/ el control al sistema operativo

** Clases de procesos
#+begin_center
¿Qué procesos son más importantes?
#+end_center
- Procesos interactivos :: El usuario tiene la /experiencia/ de la demora
- Del sistema :: Procesos no postergables
- Por nivel de usuario :: Hay usuarios más importantes que otros
- /…Asegún el sapo/ :: Cada situación puede ameritar una política
     diferente
#+begin_center
Los procesos se organizan en /colas de prioridad/ según las políticas
requeridas por cada sistema
#+end_center

* Computadoras personales
** Nacimiento de las computadoras personales
- En los 1970s comienzan a aparecer las computadoras personales
- En un principio, programadas a través de /switches/, con resultados
  a través de LEDs
#+attr_latex: :width 0.5\textwidth
#+caption: Microcomputadora Altair 8800 (1975, \approx US$600)
[[../img/altair.jpg]]

** La era de los 8 bits ($\approx 1977 - 1985$)
#+latex: \begin{columns}\begin{column}{0.6\textwidth}
- /Microprocesadores/ de 8 bits y miniaturización
  - Salida a video (tipo TV)
  - Entrada por teclado
  - Entrada opcional por cinta, primeros /diskettes/ (discos
    /flexibles/)
- Programación en BASIC (intérprete en ROM)
#+latex: \end{column} \begin{column}{0.4\textwidth}
#+attr_latex: :width \textwidth
#+caption: Commodore Pet 2001 (1977)
[[../img/commodore_pet.jpg]]
#+latex: \end{column}\end{columns}

** La era de los 8 bits ($\approx 1977 - 1985$)
- Comienzan a manejarse /dispositivos/: Unidades de cinta, unidades de
  disco, impresoras, modems, etc.
- Muchas arquitecturas mutuamente incompatibles
- Separan el /entorno de desarrollo/ del /entorno de ejecución/
  - Nace la /distribución de binarios/
- Explosión de la industria de los videojuegos

** La microcomputadora /seria/: Familia PC (1981)
#+latex: \begin{columns}\begin{column}{0.3\textwidth}
#+attr_latex: :width \textwidth
#+caption: Computadora IBM PC modelo 5150 (1981)
[[../img/ibmpc.jpg]]
#+latex: \end{column}\begin{column}{0.6\textwidth}
- Primer computadora de una empresa /seria/, orientada a su uso en
  ambiente empresarial
  - Sin color ni audio... /¿Para qué?/
- Entorno primario de ejecución: /Línea de comando/ (PC-DOS, MS-DOS)
- Al día de hoy sigue siendo la arquitectura predominante
#+latex: \end{column}\end{columns}

** Entorno gráfico (WIMP) (1984)
#+latex: \begin{columns}\begin{column}{0.3\textwidth}
#+attr_latex: :width \textwidth
#+caption: Apple Macintosh (1984)
[[../img/mac128.png]]
#+latex: \end{column}\begin{column}{0.6\textwidth}
- Ventanas, iconos, menúes, apuntador (/Windows, Icons, Menus,
  Pointer/)
- 1984: Apple Macintosh, primer sistema WIMP con éxito comercial
- Multiprocesos, /no multitarea/
#+latex: \end{column}\end{columns}

** Multitarea preventiva (1985)
#+latex: \begin{columns}\begin{column}{0.5\textwidth}
- Multitarea preventiva real: 1985 (Amiga, Atari ST)
  - Sin hardware de protección de memoria
- Los programadores /tienen que considerar la concurrencia/
#+latex: \end{column}\begin{column}{0.4\textwidth}
#+attr_latex: :width \textwidth
#+caption: Commodore Amiga 500 (1987)
#+attr_latex: :width \textwidth
[[../img/A500.jpg]]
#+latex: \end{column}\end{columns} \pause
#+caption: La /meditación del gurú/
#+attr_latex: :height 2.5em
[[../img/guru_meditation.png]]

** La profesionalización del escritorio
- Fines de los 1980 — Intel 80486, Motorola 68040, PowerPC: Hardware
  tan capaz como el de las /estaciones de trabajo/
- Reducción de las arquitecturas alternativas
- Reemplazo paulatino de los sistemas operativos por otros más capaces
  (o mejor /mercadeados/)
  - Mención breve de casos: DOS, Windows y OS/2; AmigaOS y Atari ST;
    NeXT y MacOS

** Convergen Unix y las computadoras /humildes/
- Unixes históricos para computadoras personales: Xenix, A/UX, SCO.
  - Muy limitados por su hardware
  - Precio desproporcionadamente alto; mejor ir por una /estación de
    trabajo/
- Génesis del software libre /ideológico/: GNU (1984)
- 386/BSD: Primer sistema /casi/ libre
- Linux (1991+); GNU/Linux
- El mundo *BSD
- ...Eventual muerte de las estaciones de trabajo
  - Apollo, Digital, Sun, SGI, HP (PA/RISC), …

# ** ¡Tarea! ¡Lectura!
# #+BEGIN_CENTER
# ¿Cultura Unix? ¿Cultura Windows?

# ¿Existe tal cosa?

# ¿Por qué nos enfocamos a Unix?
# \vfill
# Todo eso y más: Lean /Biculturalism/ (Joel Spolsky, 2003):
# \vfill
# http://www.joelonsoftware.com/articles/Biculturalism.html
# #+END_CENTER

** El mercado de los dispositivos (/appliances/)
- 1990s: Agendas digitales inteligentes
  - Que se van /inflando/ en computadoras completas
- 2000s: Ruteadores, modems inteligentes, controladores de TV
  (/set-top boxes/)
- 2007+: Teléfonos celulares /inteligentes/, tabletas — Por fin
  exitosos (tras incontables fracasos)
#+begin_center
¿Cuál es la diferencia entre estos equipos y nuestras computadoras de
escritorio?
#+end_center
** Arquitecturas hardware en boga hoy
- En escritorios y servidores: Derivada de PC (Intel x86)
- En dispositivos embebidos ARM (ocasionalmente MIPS; ojo ⇒ OpenRISC)
  - ARM como alternativa de bajo consumo para servidores
- Sigue habiendo un importante espacio a controladores que no
  requieren sistema operativo (p.ej. Arduino, ARM perfiles R/M,
  ASICs...)
  - Probablemente siempre lo habrá
